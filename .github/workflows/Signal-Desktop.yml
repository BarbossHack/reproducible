name: Signal-Desktop

on:
  push:
    paths:
      - ".github/workflows/Signal-Desktop.yml"

env:
  VERSION: 7.75.1

jobs:
  official:
    runs-on: ubuntu-latest
    steps:
      - name: Install Signal repos
        run: |
          wget -O- https://updates.signal.org/desktop/apt/keys.asc | gpg --dearmor > signal-desktop-keyring.gpg;
          cat signal-desktop-keyring.gpg | sudo tee /usr/share/keyrings/signal-desktop-keyring.gpg > /dev/null
          wget -O signal-desktop.sources https://updates.signal.org/static/desktop/apt/signal-desktop.sources;
          cat signal-desktop.sources | sudo tee /etc/apt/sources.list.d/signal-desktop.sources > /dev/null
          sudo apt-get update
      - name: Download official .deb
        id: hash
        run: |
          apt-get download signal-desktop=${{ env.VERSION }}
          echo "HASH=$(sha256sum signal-desktop_${{ env.VERSION }}_amd64.deb | awk '{print $1}')" >> $GITHUB_OUTPUT
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: signal-desktop_${{ env.VERSION }}_official
          path: signal-desktop_${{ env.VERSION }}_amd64.deb
    outputs:
      HASH: ${{ steps.hash.outputs.HASH }}

  build:
    runs-on: ubuntu-latest
    needs: [official]
    steps:
      - name: Build
        id: hash
        run: |
          git clone https://github.com/signalapp/Signal-Desktop -b v${{ env.VERSION }} --depth 1
          cd Signal-Desktop/reproducible-builds
          chmod +x build.sh
          ./build.sh public
          echo "HASH=$(sha256sum ../release/signal-desktop_${{ env.VERSION }}_amd64.deb | awk '{print $1}')" >> $GITHUB_OUTPUT
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: signal-desktop_${{ env.VERSION }}_build
          path: Signal-Desktop/release/signal-desktop_${{ env.VERSION }}_amd64.deb
    outputs:
      HASH: ${{ steps.hash.outputs.HASH }}

  check:
    runs-on: ubuntu-latest
    needs: [build, official]
    steps:
      - name: Check hashes
        run: |
          BUILD_HASH=${{ needs.build.outputs.HASH }}
          OFFICIAL_HASH=${{ needs.official.outputs.HASH }}
          echo "Build hash: $BUILD_HASH"
          echo "Official hash: $OFFICIAL_HASH"
          if [ -z "$BUILD_HASH" ] || [ -z "$OFFICIAL_HASH" ]; then
            echo "One of the hashes is empty!"
            exit 1
          fi
          if [ "$BUILD_HASH" = "$OFFICIAL_HASH" ]; then
            echo "Hashes match!"
          else
            echo "Hashes do not match!"
            exit 1
          fi

  diff:
    needs: check
    if: ${{ always() && needs.check.result == 'failure' }}
    runs-on: ubuntu-latest
    steps:
      - name: Download official artifact
        uses: actions/download-artifact@v5
        with:
          name: signal-desktop_${{ env.VERSION }}_official
          path: official
      - name: Download build artifact
        uses: actions/download-artifact@v5
        with:
          name: signal-desktop_${{ env.VERSION }}_build
          path: build
      - name: Prepare for diff
        run: |
          sudo npm install -g asar

          dpkg-deb -x official/signal-desktop_${{ env.VERSION }}_amd64.deb official_deb
          dpkg-deb -x build/signal-desktop_${{ env.VERSION }}_amd64.deb build_deb

          dpkg-deb --contents official/signal-desktop_${{ env.VERSION }}_amd64.deb > official_deb_contents.txt
          dpkg-deb --contents build/signal-desktop_${{ env.VERSION }}_amd64.deb > build_deb_contents.txt

          asar extract official_deb/opt/Signal/resources/app.asar offical_asar
          asar extract build_deb/opt/Signal/resources/app.asar build_asar
      - name: Diff recursive deb files
        run: |
          diff -rq official_deb build_deb || true
      - name: Diff recursive deb files content
        run: |
          diff -r -y --suppress-common-lines --color=always official_deb build_deb || true
      - name: Diff dpkg-content files listing
        run: |
          diff official_deb_contents.txt build_deb_contents.txt || true
      - name: Diff recursive asar files
        run: |
          diff -rq offical_asar build_asar || true
      - name: Diff recursive asar files content
        run: |
          diff -r -y --suppress-common-lines --color=always offical_asar build_asar || true
